name: Run .NET API Integration Tests

on:
  push:
    branches:
        - '*'
  pull_request:
    branches:
        - '*'
  schedule:
      - cron: '0 0 1 * *' # Runs at midnight on the first day of every month 
  workflow_dispatch:

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  build-and-test:
    name: Build, Test & Analyze .NET API
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    steps:
      - name: Show current directory and list files (debug)
        run: |
          pwd
          ls -lR
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner
      - name: Set up PATH for .NET tools
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
      - name: Restore dependencies
        run: dotnet restore ./restfulapidev-integration-tests.sln
      - name: Build solution
        run: dotnet build ./restfulapidev-integration-tests.sln --no-restore --configuration Release
      - name: Run tests
        run: dotnet test ./restfulapidev-integration-tests.sln --no-build --configuration Release --logger "trx;LogFileName=test-results.trx"
      - name: Find test results (debug)
        run: find . -name 'test-results.trx' -print
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/test-results.trx'
      - name: Publish .NET Test Results
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: '**/test-results.trx'
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install newman
        run: npm install -g newman
      - name: Run Postman collection with newman
        run: |
          newman run ./src/ManualTests/PostmanColleciton/api.restfull.dev.demo.postman_collection.json --reporters cli,junit --reporter-junit-export=postman-results.xml
      - name: List files after newman (debug)
        run: ls -l
      - name: Upload Postman test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: postman-results
          path: postman-results.xml